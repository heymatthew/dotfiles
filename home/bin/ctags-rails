#!/usr/bin/env ruby

# Copyright (c) 2020 Matthew B. Gray
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

require 'time'

class TagBuilder
  CTAGS_TMP = ".git/ctags.tmp"
  CTAGS_FILE = ".git/ctags"

  def initalize
    if !ctags?
      puts "ctags not present on system"
      exit(0)
    end

    if !gemfile?
      puts "cowardly exiting a project without a gemfile"
      exit(0)
    end
  end

  def call
    create_tmp_tags_for_project and make_tmp_tags_current
  end

  private

  def create_tmp_tags_for_project
    puts "building #{CTAGS_TMP}"
    system("ctags -R -f #{CTAGS_TMP} #{ctags_paths}")
  end

  def make_tmp_tags_current
    puts "updating #{CTAGS_FILE}"
    system("mv #{CTAGS_TMP} #{CTAGS_FILE}")
  end

  def ctags?
    system("which ctags > /dev/null")
  end

  def gemfile?
    File.exist?('.gemfile')
  end

  def ctags_paths
    "#{cwd} #{gem_path}"
  end

  def cwd
    "."
  end

  def gem_path
    "#{home}/.rbenv/versions/#{version}/lib/ruby/gems"
  end

  def home
    ENV["HOME"]
  end

  def version
    `rbenv version`.chomp.split(' ').first
  end
end

TagBuilder.new.call
