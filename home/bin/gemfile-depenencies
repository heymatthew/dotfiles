#!/usr/bin/env ruby

# Copyright (c) 2020 Matthew B. Gray
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# From https://stackoverflow.com/questions/21108109/how-do-i-find-out-all-the-dependencies-of-a-gem
class GemRequirements
  attr_reader :name

  def initialize(name, version = nil)
    @name = name
    @gem = Gem::Dependency.new(name, version)
  end

  def dependency_tree
    @dependency_tree ||= {}.merge(get_dependency(@gem))
  end

  private

  def get_dependency(gem_dependency)
    spec = gem_dependency.matching_specs.first
    dep_key = "#{gem_dependency.name} #{spec.version}"
    hash = { dep_key => {} }
    spec.runtime_dependencies.each do |spec_dependency|
      spec_dependency_spec = spec_dependency.matching_specs.first
      spec_dep_key = "#{spec_dependency.name} #{spec_dependency_spec.version}"
      hash[dep_key][spec_dep_key] = get_dependency(spec_dependency)
    end
    hash
  end
end

ProjectRequirements = Struct.new(:gemfile_path) do
  def gems
    gem_lines.map do |gem_line|
      match = gem_line.match(/'([^']+)'/)
      match = gem_line.match(/"([^"]+)"/) if !match
      puts "gem_line?? #{gem_line}" and next if !match
      GemRequirements.new(match[1])
    end
  end

  private

  def gem_lines
    lines.map(&:strip).select { |line| line.match(/^gem/) }
  end

  def lines
    File.open(gemfile_path, 'r').read().lines.map(&:chomp)
  end
end

if ARGV.none?
  puts "call with arg, e.g. ./script/deps.rb education/Gemfile"
  exit 1
end

ARGV.each do |gemfile_path|
  ProjectRequirements.new(gemfile_path).gems.each do |lookup|
    begin
      puts lookup.dependency_tree
    rescue
      puts "Failed to lookup #{lookup.name}"
    end
  end
end
